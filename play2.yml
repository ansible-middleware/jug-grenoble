---
# Deploy EDVIGE as a webapp using Postgresql as a datasource
- name: "Deploy EDVIGE app and associated databases"
  hosts: wildfly
  vars:
    wildfly_java_package_name: java-17-openjdk-headless 
    wildfly_enable_yml_config: true
    wildfly_yml_configs:
      - yaml_configuration.yml.j2
    edvige_ds_name: 'EdvigeDS'
    edvige_ds_pool_size: 20
    edvige_ds_pool_min_size: 2
    postgres_driver_version: 9.4.1212
    jdbc_drivers:
      - { version: "{{ postgres_driver_version }}", 
          name: 'org.postgresql', 
          jar_file: "postgresql-{{ postgres_driver_version }}.jar", 
          url: "https://repo.maven.apache.org/maven2/org/postgresql/postgresql/{{ postgres_driver_version }}/postgresql-{{ postgres_driver_version }}.jar" }
    wildfly_apps:
      - { path: '/opt/edvige.war',
          download_url: 'https://github.com/ansible-middleware/jug-grenoble/raw/refs/heads/main/edvige.war',
          root: '/edvige' }
  collections:
    - middleware_automation.wildfly
  roles:
    - pgsql
    - wildfly_install
    - wildfly_systemd
  pre_tasks:
    - name: "Ensure apps are downloaded"
      ansible.builtin.get_url:
        url: "{{ item.download_url }}"
        dest: "{{ item.path }}"
      loop: "{{ wildfly_apps }}"

  tasks:
    - name: Install two JDBC drivers with wildfly_driver role
      ansible.builtin.include_role:
        name: wildfly_driver
      when: jdbc_drivers is defined and jdbc_drivers | length > 0
      vars:
        wildfly_driver_module_name: "{{ item.name }}"
        wildfly_driver_version: "{{ item.version }}"
        wildfly_driver_jar_filename: "{{ item.jar_file }}"
        wildfly_driver_jar_url: "{{ item.url }}"
      loop: "{{ jdbc_drivers }}"

